plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.openapi.generator' version '6.6.0'
}

group = 'com.mrwersa'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.13'
    implementation 'org.springframework.boot:spring-boot-starter-web' // For WebClient
    implementation 'org.springframework.boot:spring-boot-starter-validation' // For validation
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // If using JPA
    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:bootstrap:4.6.0' // Example WebJar
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

tasks.withType(GenerateTask).configureEach {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/openapi/openapi.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "com.mrwersa.chat_craft.api"
    modelPackage = "com.mrwersa.chat_craft.model"
    invokerPackage = "com.mrwersa.chat_craft.invoker"
    configOptions = [
        dateLibrary: "java8",
        interfaceOnly: "true",
        useTags: "true",
        useSpringBoot3: "true",
        openApiNullable: "false",
        reactive: "true",
        useResponseEntity: "false",
        modelNameSuffix: "" // Ensures models are correctly named without suffixes
    ]
}

tasks.compileJava {
    dependsOn tasks.withType(GenerateTask)
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "$buildDir/generated/src/main/java"]
        }
    }
}
